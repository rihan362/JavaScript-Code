#code 1

const today = new Date();
const days = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];

let day = days[today.getDay()];
let hour = today.getHours();
let minute = today.getMinutes();
let second = today.getSeconds();
let prepand = (hour >= 12) ? "PM" : "AM";
hour = (hour > 12) ? hour - 12 : hour;

console.log(`Today is : ${day}.`);
console.log(`Current time is : ${hour} ${prepand} : ${minute} : ${second}`);


#code 2

function printWindow() {
  window.print();
}


code 3
const today = new Date();
const dd = String(today.getDate()).padStart(2, '0');
const mm = String(today.getMonth() + 1).padStart(2, '0'); // January is 0
const yyyy = today.getFullYear();

console.log(`${mm}-${dd}-${yyyy}`);
console.log(`${mm}/${dd}/${yyyy}`);
console.log(`${dd}-${mm}-${yyyy}`);
console.log(`${dd}/${mm}/${yyyy}`);

code 4

let a = 5, b = 6, c = 7;
let s = (a + b + c) / 2;
let area = Math.sqrt(s * (s - a) * (s - b) * (s - c));
console.log("Area of triangle:", area);


code 5

function rotateStringRight(str) {
  let text = str;

  console.log("Original: " + text);


  setInterval(function () {

    let lastChar = text.charAt(text.length - 1);

    text = lastChar + text.slice(0, text.length - 1);
    console.log("Rotation: " + text);
  }, 1000);
}

// Call the function
rotateStringRight("w3resource");


code 6
let num = Math.ceil(Math.random() * 10);
let guess = prompt('Guess a number between 1 and 10');
if (parseInt(guess) === num) {
  alert("Good Work");
} else {
  alert(`Not matched. The number was ${num}`);
}
 code 7

function convertCtoF(c) {
  return (c * 9/5) + 32;
}

function convertFtoC(f) {
  return (f - 32) * 5/9;
}

console.log("60째C is", convertCtoF(60), "째F");
console.log("45째F is", convertFtoC(45), "째C");


code 8

console.log(window.location.href);

code 9

function reverseNumber(n) {
  return parseInt(n.toString().split('').reverse().join(''));
}
console.log(reverseNumber(32243)); // 34223


code 10

function alphabetical(str) {
  return str.split('').sort().join('');
}
console.log(alphabetical("webmaster")); // 'abeemrstw'


code 11

function combination(str)
{
    let result=[];
    for(let i=0;i<str.length;i++)
    {
        for(let j=i+1;j<=str.length-1;j++)
        {
            result.push(str.slice(i,j));
        }
    }
    return result;
}

console.log(combination("rihan"))


code 12


function calculate(num1,num2)
{
    const multiply=num1*num2;
    const division=num2!==0? (num1/num2):"cannot divide by zero";
    
    console.log(`Multiplication of ${num1} and ${num2} is: ${multiplication}`);
    console.log(`Division of ${num1} and ${num2} is ${division}`);
}

calculate(10,5);


#code 13

function captialisewords(str)
{
    return str.split(" ").map(word=>word.charAt(0).toUpperCase()+word.slice(1)).join(",");
}
const input="Inmorphis is an IT Company";
const output=captialisewords(input);
console.log(output);


#code 14

function longestword(str)
{
    const words=str.split(" ");
    let longest="" ;
    
    for(let word of words)
    {
        if(word.length>longest.length)
        {
            longest=word;
        }
    }
    return longest;
    
    
}
const result=longestword("this is an employess")
console.log(result);




#code 15-count vowelsfunction countvowels(str)
{
    const vowels=['a','e','i','o','u'];
    let c=0;
    
    for(let char of str.toLowerCase())
    {
        if(vowels.includes(char))
        {
            c++;
        }
    }
    
    return c;
}
const ans=countvowels("rihan");
console.log(ans);


#code 16-count primenumber;


function isPrime(num)
{
    if(num<=1)return false;
    if(num==2)return true;
    
    for(let i=2;i<Math.sqrt(num);i++)
    {
        if(num%i==0)
        {
            return false;
        }
    }
    
    return true;
}
const ans=isPrime(53
);
console.log(ans);



#code 17

function rtype(value)
{
    console.log(typeof(value));
}
function sample()
{
    return "hello";
}

rtype(45);
rtype("rihan");
rtype({name:"rihan"})
rtype(true);
rtype(undefined)
rtype(null)
rtype([1,2,3,4,"rihan"])
rtype(sample);


#code 18-identity matrix

function identity(n)
{
    let matrix=[];
    
    for(let i=0;i<n;i++)
    {
        let row=[];
        for(let j=0;j<n;j++)
        {
            if(i==j)
            {
                row.push('1');
            }
            else
            {
                row.push('0')
            }
        }
        matrix.push(row);
    }
    
    
    return matrix;
}

const ans=identity(4);
console.log(ans);



#code 20-Get factors

function getfactors(n)
{
    if(n<=0)return "Please enter a positive integer";
    
    let factors=[];
    
    for(let i=1;i<=n;i++)
    {
        if(n%i==0)
        {
            factors.push(i);
        }
    }
    return factors;
}

const result=getfactors(144);
console.log(result);



#code -21-perfect numbers

function isPerfectNumber(num)
{
    if(num<=0)return false;
    
    let sum=0;
    for(let i=0;i<num;i++)
    {
        if(num%i==0)
        {
            sum+=i;
        }
        
    }
    return sum==num;
}

const ans=isPerfectNumber(28)
console.log(ans);


code 22 -Amounttocoins
function amountToCoins(amount,coins)
{
    let result=[];
    for(let i=0;i<coins.length;i++)
    {
        while(amount>=coins[i])
        {
            amount-=coins[i];
            result.push(coins[i]);
            
        }
    }
    return result;
}
const output = amountToCoins(46, [25, 10, 5, 2, 1]);
console.log(output);  


code 23-uniquechar

function uniquechar(str)
{
    let ans="";
    for(let char of str)
    {
        if(!ans.includes(char))
        {
            ans+=char;
            
        }
    }
    
    console.log(ans);
}
uniquechar("thequickbrownfoxjumpsoverthelazydog");


#code 24-count occurence

function countletter(str)
{
    let lettercount={};
    
    for(let char of str)
    {
        if(char.match(/[a-z]/i))
        {
            char=char.toLowerCase();
            
            
            if(lettercount[char])
            {
                lettercount[char]++;
            }
            else
            {
                lettercount[char]=1;
            }
        }
    }
    
    return lettercount;
    
}

console.log(countletter("rihann"));

#code 25-binary search

function binary(arr,target)
{
    let left=0;
    let right=arr.length-1;
    
    while(left<right)
    {
        let mid=Math.floor((left+right)/2);
        
        if(arr[mid]==target)
        {
            return mid;
        }
        else if(arr[mid]>target)
        {
            right=mid-1;
            
        }
        else
        {
            left=mid+1;
        }
        
        
    }
    return -1;
    
}


const ans=binary([1,2,3,4,5,6,7,8],6);
console.log(ans);


#code 26
function larger(arr,num)
{
    let result=[];
    for(var i=0;i<arr.length;i++)
    {
        if(arr[i]>num)
        {
            result.push(arr[i]);
        }
        
    }
    
    return result;
}

const ans=larger([2,3,4,5,6,1],4);
console.log(ans);

code 27

function generate(len)
{
    const char="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
    let id="";
    
    for(let i=0;i<len;i++)
    {
        const randomindex=Math.floor(Math.random()*char.length);
        id+=char[randomindex];
    }
    
    return id;
}

console.log(generate(10)); 

#code 28 -> count letters

// Online Javascript Editor for free
// Write, Edit and Run your Javascript code using JS Online Compiler
function countletter(str,letter)
{
    let  count=0;
    for(let char of str)
    {
        if(char==letter)
        {
            count++;
        }
    }
    
    return count;
}

console.log(countletter("ranbir","r"));


#code 29
function firstoccur(str)
{
    let countcharacter={};
    
    for(let char of str)
    {
        if(countcharacter[char])
        {
            countcharacter[char]++;
        }
        else
        {
            countcharacter[char]=1;
        }
    }
    
    for(let char of str)
    {
        if(countcharacter[char]==1)
        {
            return char;
        }
    }
    
    return null;
    
}
const result = firstoccur('abacddbec');
console.log(result);


#code 30 - bubble sort

function bubble(arr)
{
 
    for(let i=0;i<arr.length-1;i++)
    {
        for(let j=0;j<arr.length-1-i;j++)
        {
            if(arr[j]>arr[j+1])
            {
                let temp=arr[i];
                arr[i]=arr[j];
                arr[j]=temp;
            }
        }
    }
    
    return arr;
}

console.log(bubble([9,8,7,6,5]))



#code 31

function longestcountry(str)
{
    let longest="";
    
    for(let char of str)
    {
        if(char.length>longest.length)
        {
            longest=char;
        }
    }
    
    return longest;
}

console.log(longestcountry(["Australia", "Germany", "United States of America"]))



#code 32

function myFunction() {
    return "Something";
}

console.log(myFunction.name); 

#code 33


function fact(n)
{
    if(n<=1)return 1;
    
    return fact(n-1)*n;
}

const ans=fact(5);
console.log(ans);


#code 34

function getrange(x,y)
{
    let val=x;
    if(val>y)
    {
        return;
    }
    console.log(val);
    return getrange(val+1,y)
}

getrange(100,1000)


#code 35

function gcd(a, b) {
    while (b !== 0) {
        let temp = b;
        b = a % b;
        a = temp;
    }
    return a;
}

#  CODE 36
function getsum(arr,index)
{
   if(index>=arr.length)
   {
       return 0;
   }
   
   return arr[index]+getsum(arr,index+1);
}

var nrr=[1,2,3,4,5,6];
var result=getsum(nrr,0);
console.log(result);


#code 37

function fibonacci(n) {
  if (n === 0) return 0;
  if (n === 1) return 1;
  return fibonacci(n - 1) + fibonacci(n - 2);
}

function getFibonacciSeries(count) {
  const series = [];
  for (let i = 0; i < count; i++) {
    series.push(fibonacci(i));
  }
  return series;
}

// Example usage:
console.log(getFibonacciSeries(10)); 
// Output: [0, 1, 1, 2, 3, 5, 8, 13, 21, 34]

#code 38

function getexpo(base,exponent)
{
 if(exponent==0)
 {
     return 1;
 }
   return base*getexpo(base,exponent-1);
   

}
const ans=getexpo(5,5)
console.log(ans);



#code 39



function isEven(num) {
    return num % 2 === 0;
}

// Example usage:
console.log(isEven(4));  // Output: true
console.log(isEven(7));  // Output: false


#code 40

function display(a,b)
{
    if(a>b)
    {
        console.log(a);
    }
    else if(b>a)
    {
        console.log(b);
    }
    else
    {
        console.log("Both numbers are equal")
    }
}

display(5,10);


#code 41

function findsign(a,b,c)
{
    const product=a*b*c;
    if(product>0)
    {
        alert("The sign is +")
    }
    else if(product<0)
    {
        alert("The sign is -")
        
    }
    else 
    {
        alert("The value is 0");
    }
    
}

console.log(findsign(3,6,-8))


#code 42
function sortThree(a,b,c)
{
    let max,mid,min;
    
    if(a>=b && a>=c)
    {
        max=a;
        if(b>=c)
        {
            mid=b;
            min=c;
        }
        else
        {
            min=b;
            mid=c;
        }
    }
    else if(b>=a && b>=c)
    {
        max=b;
        if(a>=c)
        {
            mid=b;
            min=c;
        }
        else
        {
            min=b;
            mid=c;
        }
    }
    else
    {
        max=c;
        if(a>=b)
        {
            mid=a;
            min=b;
        }
        else
        {
            min=a;
            mid=b;
        }
    }
    
    alert(`Sorted order ${max} ${mid} ${min}`)
}

#code 43

function findLargest(a, b, c, d, e) {
    let largest;

    if (a >= b && a >= c && a >= d && a >= e) {
        largest = a;
    } else if (b >= a && b >= c && b >= d && b >= e) {
        largest = b;
    } else if (c >= a && c >= b && c >= d && c >= e) {
        largest = c;
    } else if (d >= a && d >= b && d >= c && d >= e) {
        largest = d;
    } else {
        largest = e;
    }

    alert("The largest number is: " + largest);
}

// Example usage:
findLargest(12, 45, 8, 32, 19);  // Output: alert with "The largest number is: 45"


#code 44

function display(n)
{
    for(let i=0;i<=n;i++)
    {
        if(i%2==0)
        {
            alert(`${i} is even`)
        }
        else
        {
            alert(`${i} is odd`)
        }
    }
}
display(15)

#code 45
for (let i = 0; i <= 15; i++) {
    if (i % 2 === 0) {
        console.log(i + " is even");
    } else {
        console.log(i + " is odd");
    }
}


#code 46

    const students = [
        { name: "David", marks: 80 },
        { name: "Vinoth", marks: 77 },
        { name: "Divya", marks: 88 },
        { name: "Ishitha", marks: 95 },
        { name: "Thomas", marks: 68 }
    ];

    let total = 0;

    // Compute total marks
    for (let student of students) {
        total += student.marks;
    }

    // Compute average
    const average = total / students.length;

    // Determine grade
    let grade;
    if (average < 60) {
        grade = "F";
    } else if (average < 70) {
        grade = "D";
    } else if (average < 80) {
        grade = "C";
    } else if (average < 90) {
        grade = "B";
    } else {
        grade = "A";
    }

    // Output result
    console.log("Average Marks: " + average);
    console.log("Grade: " + grade);
}

// Run the function
computeGrade();



#code 47

function iterate(n)
{
    for(let i=0;i<n;i++)
    {
        if(i%3==0)
        {
            alert("Fizz")
        }
        else if(i%5==0)
        {
            alert("Buzz");
        }
        else
        {
            alert("Fizzbuzz")
        }
    }
}

iterate(5)



#code 48


function happynumr(n)
{
    let happynumber=[];
    let current=1;
    while(happnumber.length<n)
    {
        if(isHappy(current))
        {
            happynumber.push(current);
        }
        current++;
    }
    
    return happynumber;
}


function isHappy(num)
{
    let seen =new set();
    while(num!=1 && !seen.has(num))
    {
        seen.add(num);
        num=getsumsquare(num);
        
    }
    
    return num==1;
    
}

function getsumsquare(num)
{
    let sum=0;
    while(num>0)
    {
        let digit=num%10;
        sum+=digit*digit;
        num=Math.floor(num/10);
    }
    
    return sum;
}



#code 49
 function is_array(input) {
  return Array.isArray(input);
}

// Test Data
console.log(is_array('w3resource')); // false
console.log(is_array([1, 2, 3]));    // true



#code 50

function array_Clone(arr) {
  return arr.slice(0);
}

// Test Data
console.log(array_Clone([1, 2, 4, 0]));       // [1, 2, 4, 0]
console.log(array_Clone([1, 2, [4, 0]]));     // [1, 2, [4, 0]]


#code 51

function first(arr, n) {
  if (!Array.isArray(arr) || arr.length === 0) return [];

  if (n == null) {
    return arr[0];
  }

  if (n < 0) {
    return [];
  }

  return arr.slice(0, n);
}

// Test Data
console.log(first([7, 9, 0, -2]));       // 7
console.log(first([], 3));              // []



#code 52

var mycolor=['red','blue','pink'];

console.log(mycolor.join(''))
console.log(mycolor.join(','))
console.log(mycolor.join('+'))


#code 53


function insertdashes(num)
{
    let str=num.toString();
    
    let result=[str[0]];
    
    for(let i=1;i<str.length;i++)
    {
        if(parseInt(str[i-1])%2==0 && parseInt(str[i])%2==0)
        {
            result.push('-');
        }
        result.push(str[i]);
    }
    
    return result.join('')
}

console.log(insertdashes(0245678));




#code 54

 function mostfrequnt(arr)
 {
     let frequency={};
     let maxcount=0;
     let mostfrequent;
     
     for(let i=0;i<arr.length;i++)
     {
         let item=arr[i];
         frequency[item]=(frequency[item]||0)+1;
         
         if(frequency[item]>maxcount)
         {
             maxcount=frequency[item];
             mostfrequent=item;
             
         }
     }
     console.log(`${mostfrequent} ${maxcount}`);
 }
 
 
 var arr1 = [3, 'a', 'a', 'a', 2, 3, 'a', 3, 'a', 2, 4, 9, 3];
mostfrequnt(arr1);



#code 55
function swap(str)
{
    let result="";
    
    for(let char of str)
    {
        if(char==char.toUpperCase())
        {
            result+=char.toLowerCase();
        }
        else
        {
            result+=char.toUpperCase();
        }
    }
    
    return result;
}

console.log(swap("Rihan"))


#code 56

function sumof(arr)
{
    let sum=0;
    
    for(let val of arr)
    {
        sum+=val*val;
        
    }
    return sum;
}

console.log(sumof([1,2,3,4]))



#code 57

function sumproof(arr)
{
    let sum=0;
    let product=1;
    
    for(let val of arr)
    {
        sum+=val*val;
        product*=val;
        
    }
    console.log(product);
    console.log(sum)
}
sumproof([1,2,3,4])


#code 58

let items = [];

function addItem(item) {
  items.push(item);
  console.log("Item added:", item);
  console.log("Current items in array:", items);
}

// Sample usage
addItem("Apple");
addItem("Banana");
addItem("Orange");


#code 59-pattern


function print(n)
{
    
    for(let i=0;i<n;i++)
    {
        let pattern="";
        for(let j=0;j<=i;j++)
        {
            pattern+="*";
        }
        console.log(pattern)
        
    }
}

print(5)

code 60

function print(a,b)
{
    while(b!=0)
    {
        let temp=b;
        b=a%b;
        a=temp;
    }
    
    console.log(a)
    
}

print(50,45)




#code 61

for (let i = 1; i < 1000; i++) {
    if (i % 3 === 0 || i % 5 === 0) {
        sum += i;
    }
}


#code 62

// Online Javascript Editor for free
// Write, Edit and Run your Javascript code using JS Online Compiler
function removeDuplicates(arr)
{
    let seen=new Set();
    return arr.filter(item=>{
        let lower=item.toLowerCase();
        if(seen.has(lower))
        {
            return false;
        }
        else
        {
            seen.add(lower)
            return true;
        }
    })
}

let items = ["Apple", "Banana", "apple", "Orange", "BANANA"];
let result = removeDuplicates(items);
console.log(result);





#code 63-Display colors with ordinal suffix

let color=["Blue","Yellow","red"];

function getsuffix(n)
{
    if(n==1)return "st";
    if(n==2)return "nd";
    if(n==3)return "rd";
    return "th"
    
    
}

for(let i=0;i<color.length;i++)
{
   position=i+1;
   suffix=getsuffix(position);
   console.log(`${position}${suffix} is ${color[i]}`);
   
}


#code 64 range of leap years----------------------

function getleap(start,end)
{
    let leapyear=[];
    for(let i=start;i<=end;i++)
    {
        if((i%4==0 && i%100!=0)||(i%400==0))
        {
            leapyear.push(i);
        }
    }
    
    console.log(leapyear)
}

getleap(2000,2025)


#code 65 -shuffle array---------------------------
function shuffleArray(arr)
{
    for(let i=arr.length-1;i>0;i--)
    {
        let j=Math.floor(Math.random()*(i+1));
        [arr[i],arr[j]]=[arr[j],arr[i]]
    }
    
    return arr;
}

let nums = [1, 2, 3, 4, 5];
console.log(shuffleArray(nums));

짙code-66-------------------------------------------



function sumOfIndexValues(array1, array2) {
  let maxLength = Math.max(array1.length, array2.length);
  let result = [];

  for (let i = 0; i < maxLength; i++) {
    let val1 = array1[i] || 0;  
    let val2 = array2[i] || 0;  
    result.push(val1 + val2);
  }

  return result;
}

// Sample input
let array1 = [1, 0, 2, 3, 4];
let array2 = [3, 5, 6, 7, 8, 13];



code 67

function findDuplicates(arr) {
    let seen = new Set();
    let duplicates = new Set();

    for (let item of arr) {
        if (seen.has(item)) {
            duplicates.add(item);
        } else {
            seen.add(item);
        }
    }

    return Array.from(duplicates);
}


let numbers = [1, 2, 3, 4, 5, 2, 4, 6, 1];
let result = findDuplicates(numbers);
console.log("Duplicate values:", result);


code 68--------------------------------

function flatten(arr, shallow = false) {
  if (shallow) {
    return arr.flat(); 
  } else {
    return arr.flat(Infinity); 
  }
}


console.log(flatten([1, [2], [3, [[4]]], [5, 6]]));        // [1, 2, 3, 4, 5, 6]
console.log(flatten([1, [2], [3, [[4]]], [5, 6]], true));  // [1, 2, 3, [[4]], 5, 6]


code 69
function union(arr1,arr2)
{
    let result=[];
    for(let i=0;i<arr1.length;i++)
    {
        if(!result.includes(arr1[i]))
        {
            result.push(arr1[i]);
        }
    }
    
    for(let j=0;j<arr2,length;j++)
    {
        if(!result.includes(arr2[j]))
        {
            result.push(arr2[i]);
        }
    }
    
    return result;
}

console.log([1,2,3,4,5],[3,4,5,6])


code 70----------------------------------------

function difference(arr1, arr2) {
  let result = [];

  for (let i = 0; i < arr1.length; i++) {
    if (!arr2.includes(arr1[i])) {
      result.push(arr1[i]);
    }
  }

  for (let j = 0; j < arr2.length; j++) {
    if (!arr1.includes(arr2[j]) && !result.includes(arr2[j])) {
      result.push(arr2[j]);
    }
  }

  return result.map(String); 
}


console.log(difference([1, 2, 3], [100, 2, 1, 10])); 


#code 71-----------------------------------------

function removeFalsyValues(arr) {
  return arr.filter(function(value) {
    return value; 
  });
}


const sampleArray = [NaN, 0, 15, false, -22, '', undefined, 47, null];


console.log(removeFalsyValues(sampleArray));


#code 72-------------------------------------------

function sortByTitle(library) {
  return library.sort(function(a, b) {
    return a.title.localeCompare(b.title);
  });
}

var library = [
  { author: 'Bill Gates', title: 'The Road Ahead', libraryID: 1254 },
  { author: 'Steve Jobs', title: 'Walter Isaacson', libraryID: 4264 },
  { author: 'Suzanne Collins', title: 'Mockingjay: The Final Book of The Hunger Games', libraryID: 3245 }
];

console.log(sortByTitle(library));


#code 73------------------------------------pair sum


function pairsum(arr,target)
{
    const seen={};
    
    for(let i=0;i<arr.length;i++)
    {
        const complement=target-arr[i];
        
        if(seen.hasOwnProperty(complement))
        {
            return [seen[complement],i];
        }
        
        seen[arr[i]]=i;
    }
    return null;
}


#code 74

const users = [
  { name: "Alice", age: 25 },
  { name: "Bob", age: 30 },
  { name: "Charlie", age: 35 }
];

function getans(arr,index)
{
    return arr.map(item=>item[index]);
}

console.log(getans(users,'age'))



#code 75

function lonegest(str)
{
    if(str.length==0)return '';
    
    let prefix=str[0];
    
    for(let i=1;i<str.length;i++)
    {
        while(str[i].indexOf(prefix)!==0)
        {
            prefix=prefix.slice(0,-1);
            if(prefix==='')return '';
        }
    }
    
    return prefix;
}


#code 76------------------------------------------

function merge_array(arr1, arr2) {
  return Array.from(new Set([...arr1, ...arr2]));
}


var array1 = [1, 2, 3];
var array2 = [2, 30, 1];
console.log(merge_array(array1, array2));


#code 77--------------------------------------

// Online Javascript Editor for free
// Write, Edit and Run your Javascript code using JS Online Compiler

function remove(arr,target)
{
    let result=[];
    for(let i=0;i<arr.length;i++)
    {
        if(arr[i]==target)
        {
            continue;
        }
        result.push(arr[i]);
    }
    return result;
}

console.log(remove([13,3,4],3))


code 78-----------------------------------------


function emptyArray(arr) {
  arr.length = 0;
}

// Test
let testArray = [1, 2, 3, 4];
emptyArray(testArray);
console.log(testArray); // []


code 79---------------------------------------

function nthlargest(arr, n) {
  let sorted = [...arr].sort((a, b) => b - a);
  return sorted[n - 1];
}

console.log(nthlargest([43, 56, 23, 89, 88, 90, 99, 652], 4)); // 89



code 80------------------------Create Numeric Value Arra

function array_filled(length, value) {
  return Array(length).fill(value);
}

console.log(array_filled(6, 0));   // [0, 0, 0, 0, 0, 0]
console.log(array_filled(4, 11));  // [11, 11, 11, 11]


code 81----------------------  Array filled value


function array_filled(length, value) {
  return Array(length).fill(value);
}


console.log(array_filled(3, 'default value')); 
// ["default value", "default value", "default value"]


code 82-----------------------  

function moveElement(arr, fromIndex, toIndex) {
  // Check bounds
  if (fromIndex < 0 || fromIndex >= arr.length || toIndex < 0 || toIndex >= arr.length) {
    console.error("Invalid index");
    return arr;
  }

  const element = arr.splice(fromIndex, 1)[0];
  arr.splice(toIndex, 0, element);             
  return arr;
}


code 83--------------------------------

  function filter_array_values(arr) {
  return arr.filter(Boolean); 
}


console.log(filter_array_values([58, '', 'abcd', true, null, false, 0]));



code 84---------------------------------


function array_range(start, count) {
  return Array.from({ length: count }, (_, i) => start + i);
}


console.log(array_range(1, 4));   
console.log(array_range(-6, 4));    



code 85------------------------------


function rangeBetwee(start, end) {
  let result = [];
  for (let i = start; i <= end; i++) {
    result.push(i);
  }
  return result;
}

// Test
console.log(rangeBetwee(4, 7));     // [4, 5, 6, 7]
console.log(rangeBetwee(-4, 7));    // [-4, -3, ..., 7]

code 86------------------------

function difference(arr1, arr2) {
  // Flatten deeply nested arrays
  function flattenDeep(arr) {
    return arr.reduce((acc, val) =>
      Array.isArray(val) ? acc.concat(flattenDeep(val)) : acc.concat(val), []);
  }

  const flatArr1 = flattenDeep(arr1).map(String);
  const flatArr2 = flattenDeep(arr2).map(String);

  const combined = [...flatArr1, ...flatArr2];
  const unique = Array.from(new Set(combined));

  return unique;
}

console.log(difference([1, 2, 3], [100, 2, 1, 10]));
console.log(difference([1, 2, 3, 4, 5], [1, [2], [3, [[4]]],[5,6]]));


code 87-----------------------------


JAVASCRIPT DATE



function is_date(input) {
  return Object.prototype.toString.call(input) === "[object Date]";
}

console.log(is_date([1, 2, 4, 0]));                 // false

code 88---------------------------

function curday(separator = '/') {
  const now = new Date();
  const mm = String(now.getMonth() + 1).padStart(2, '0'); // Months are 0-based
  const dd = String(now.getDate()).padStart(2, '0');
  const yyyy = now.getFullYear();

  return mm + separator + dd + separator + yyyy;
}


console.log(curday('/')); // e.g., "06/21/2025"
console.log(curday('-')); 

code 89-----------------------------

function getdays(month,year)
{
    return new Date(year,month,0).getDate();
}

console.log(getdays(1, 2012));


code 90-------------------------------

function month_name(date) {
  const monthNames = [
    "January", "February", "March", "April", "May", "June",
    "July", "August", "September", "October", "November", "December"
  ];
  return monthNames[date.getMonth()];
}



code 91----------------------------

function compare_dates(date1, date2) {
  if (date1.getTime() === date2.getTime()) return "Date1 = Date2";
  else if (date1 > date2) return "Date1 > Date2";
  else return "Date2 > Date1";
}


code 92
--------------------------------------

function add_minutes(date, minutes) {
  return new Date(date.getTime() + minutes * 60000);
}


code 93-------------------------------

function is_weekend(dateStr) {
  const date = new Date(dateStr);
  const day = date.getDay();
  return (day === 0 || day === 6) ? "weekend" : undefined;
}

// Test
console.log(is_weekend('Nov 15, 2014')); // Saturday



code 94--------------------------------

function date_diff_indays(date1, date2) {
  const dt1 = new Date(date1);
  const dt2 = new Date(date2);
  const diffTime = dt2.getTime() - dt1.getTime();
  return Math.floor(diffTime / (1000 * 60 * 60 * 24));
}

code 95----------------------------------


function lastday(year, month) {
  return new Date(year, month + 1, 0).getDate();
}



code 96-----------------------------------


function yesterday(dateStr) {
  const date = new Date(dateStr);
  date.setDate(date.getDate() - 1);
  return date;
}

// Test
console.log(yesterday('Nov 15, 2014').toString());




#code 97--------------------------------


function max_date(dates) {
  return new Date(Math.max(...dates.map(d => new Date(d)))).toISOString().slice(0, 10).replace(/-/g, '/');
}




code 98----------------------------
function min_date(dates) {
  return new Date(Math.min(...dates.map(d => new Date(d)))).toISOString().slice(0, 10).replace(/-/g, '/');
}

// Test
console.log(min_date(['2015/02/01', '2015/02/02', '2015/01/03'])); // "2015/01/03"


code 99
------------------------------
function timeConvert(minutes) {
  const hours = Math.floor(minutes / 60);
  const mins = minutes % 60;
  return `${minutes} minutes = ${hours} hour(s) and ${mins} minute(s).`;
}


code 100------------------------

function days_of_a_year(year) {
  return ((year % 4 === 0 && year % 100 !== 0) || (year % 400 === 0)) ? 366 : 365;
}

code 101-----------------------

function quarter_of_the_year(date) {
  return Math.floor(date.getMonth() / 3) + 1;
}


code 102----------------------------

function days_passed(date) {
  const start = new Date(date.getFullYear(), 0, 1);
  const diff = date - start;
  return Math.floor(diff / (1000 * 60 * 60 * 24)) + 1;
}


code 103--------------------------------

function unix_to_time(unixTimestamp) {
  const date = new Date(unixTimestamp * 1000);
  return date.toLocaleTimeString();
}

code 104---------------------------------
function calculate_age(birthDate) {
  const today = new Date();
  let age = today.getFullYear() - birthDate.getFullYear();
  const m = today.getMonth() - birthDate.getMonth();
  if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {
    age--;
  }
  return age;
}

code 105---------------------------------

function day_of_the_month(date) {
  return String(date.getDate()).padStart(2, '0');
}


code 106
-------------------------------------------
function short_Days(date) {
  return date.toLocaleString('en-us', { weekday: 'short' });
}

code 107----------------------------------

function long_Days(date) {
  return date.toLocaleString('en-us', { weekday: 'long' });
}

code 108------------------------------------

function ISO_numeric_date(date) {
  const day = date.getDay();
  return day === 0 ? 7 : day;
}
























