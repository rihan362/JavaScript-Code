#code 1

const today = new Date();
const days = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];

let day = days[today.getDay()];
let hour = today.getHours();
let minute = today.getMinutes();
let second = today.getSeconds();
let prepand = (hour >= 12) ? "PM" : "AM";
hour = (hour > 12) ? hour - 12 : hour;

console.log(`Today is : ${day}.`);
console.log(`Current time is : ${hour} ${prepand} : ${minute} : ${second}`);


#code 2

function printWindow() {
  window.print();
}


code 3
const today = new Date();
const dd = String(today.getDate()).padStart(2, '0');
const mm = String(today.getMonth() + 1).padStart(2, '0'); // January is 0
const yyyy = today.getFullYear();

console.log(`${mm}-${dd}-${yyyy}`);
console.log(`${mm}/${dd}/${yyyy}`);
console.log(`${dd}-${mm}-${yyyy}`);
console.log(`${dd}/${mm}/${yyyy}`);

code 4

let a = 5, b = 6, c = 7;
let s = (a + b + c) / 2;
let area = Math.sqrt(s * (s - a) * (s - b) * (s - c));
console.log("Area of triangle:", area);


code 5

function rotateStringRight(str) {
  let text = str;

  console.log("Original: " + text);


  setInterval(function () {

    let lastChar = text.charAt(text.length - 1);

    text = lastChar + text.slice(0, text.length - 1);
    console.log("Rotation: " + text);
  }, 1000);
}

// Call the function
rotateStringRight("w3resource");


code 6
let num = Math.ceil(Math.random() * 10);
let guess = prompt('Guess a number between 1 and 10');
if (parseInt(guess) === num) {
  alert("Good Work");
} else {
  alert(`Not matched. The number was ${num}`);
}
 code 7

function convertCtoF(c) {
  return (c * 9/5) + 32;
}

function convertFtoC(f) {
  return (f - 32) * 5/9;
}

console.log("60°C is", convertCtoF(60), "°F");
console.log("45°F is", convertFtoC(45), "°C");


code 8

console.log(window.location.href);

code 9

function reverseNumber(n) {
  return parseInt(n.toString().split('').reverse().join(''));
}
console.log(reverseNumber(32243)); // 34223


code 10

function alphabetical(str) {
  return str.split('').sort().join('');
}
console.log(alphabetical("webmaster")); // 'abeemrstw'


code 11

function combination(str)
{
    let result=[];
    for(let i=0;i<str.length;i++)
    {
        for(let j=i+1;j<=str.length-1;j++)
        {
            result.push(str.slice(i,j));
        }
    }
    return result;
}

console.log(combination("rihan"))


code 12


function calculate(num1,num2)
{
    const multiply=num1*num2;
    const division=num2!==0? (num1/num2):"cannot divide by zero";
    
    console.log(`Multiplication of ${num1} and ${num2} is: ${multiplication}`);
    console.log(`Division of ${num1} and ${num2} is ${division}`);
}

calculate(10,5);


#code 13

function captialisewords(str)
{
    return str.split(" ").map(word=>word.charAt(0).toUpperCase()+word.slice(1)).join(",");
}
const input="Inmorphis is an IT Company";
const output=captialisewords(input);
console.log(output);


#code 14

function longestword(str)
{
    const words=str.split(" ");
    let longest="" ;
    
    for(let word of words)
    {
        if(word.length>longest.length)
        {
            longest=word;
        }
    }
    return longest;
    
    
}
const result=longestword("this is an employess")
console.log(result);




#code 15-count vowelsfunction countvowels(str)
{
    const vowels=['a','e','i','o','u'];
    let c=0;
    
    for(let char of str.toLowerCase())
    {
        if(vowels.includes(char))
        {
            c++;
        }
    }
    
    return c;
}
const ans=countvowels("rihan");
console.log(ans);


#code 16-count primenumber;


function isPrime(num)
{
    if(num<=1)return false;
    if(num==2)return true;
    
    for(let i=2;i<Math.sqrt(num);i++)
    {
        if(num%i==0)
        {
            return false;
        }
    }
    
    return true;
}
const ans=isPrime(53
);
console.log(ans);



#code 17

function rtype(value)
{
    console.log(typeof(value));
}
function sample()
{
    return "hello";
}

rtype(45);
rtype("rihan");
rtype({name:"rihan"})
rtype(true);
rtype(undefined)
rtype(null)
rtype([1,2,3,4,"rihan"])
rtype(sample);


#code 18-identity matrix

function identity(n)
{
    let matrix=[];
    
    for(let i=0;i<n;i++)
    {
        let row=[];
        for(let j=0;j<n;j++)
        {
            if(i==j)
            {
                row.push('1');
            }
            else
            {
                row.push('0')
            }
        }
        matrix.push(row);
    }
    
    
    return matrix;
}

const ans=identity(4);
console.log(ans);



#code 20-Get factors

function getfactors(n)
{
    if(n<=0)return "Please enter a positive integer";
    
    let factors=[];
    
    for(let i=1;i<=n;i++)
    {
        if(n%i==0)
        {
            factors.push(i);
        }
    }
    return factors;
}

const result=getfactors(144);
console.log(result);



#code -21-perfect numbers

function isPerfectNumber(num)
{
    if(num<=0)return false;
    
    let sum=0;
    for(let i=0;i<num;i++)
    {
        if(num%i==0)
        {
            sum+=i;
        }
        
    }
    return sum==num;
}

const ans=isPerfectNumber(28)
console.log(ans);


code 22 -Amounttocoins
function amountToCoins(amount,coins)
{
    let result=[];
    for(let i=0;i<coins.length;i++)
    {
        while(amount>=coins[i])
        {
            amount-=coins[i];
            result.push(coins[i]);
            
        }
    }
    return result;
}
const output = amountToCoins(46, [25, 10, 5, 2, 1]);
console.log(output);  


code 23-uniquechar

function uniquechar(str)
{
    let ans="";
    for(let char of str)
    {
        if(!ans.includes(char))
        {
            ans+=char;
            
        }
    }
    
    console.log(ans);
}
uniquechar("thequickbrownfoxjumpsoverthelazydog");


#code 24-count occurence

function countletter(str)
{
    let lettercount={};
    
    for(let char of str)
    {
        if(char.match(/[a-z]/i))
        {
            char=char.toLowerCase();
            
            
            if(lettercount[char])
            {
                lettercount[char]++;
            }
            else
            {
                lettercount[char]=1;
            }
        }
    }
    
    return lettercount;
    
}

console.log(countletter("rihann"));

#code 25-binary search

function binary(arr,target)
{
    let left=0;
    let right=arr.length-1;
    
    while(left<right)
    {
        let mid=Math.floor((left+right)/2);
        
        if(arr[mid]==target)
        {
            return mid;
        }
        else if(arr[mid]>target)
        {
            right=mid-1;
            
        }
        else
        {
            left=mid+1;
        }
        
        
    }
    return -1;
    
}


const ans=binary([1,2,3,4,5,6,7,8],6);
console.log(ans);


#code 26
function larger(arr,num)
{
    let result=[];
    for(var i=0;i<arr.length;i++)
    {
        if(arr[i]>num)
        {
            result.push(arr[i]);
        }
        
    }
    
    return result;
}

const ans=larger([2,3,4,5,6,1],4);
console.log(ans);

code 27

function generate(len)
{
    const char="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
    let id="";
    
    for(let i=0;i<len;i++)
    {
        const randomindex=Math.floor(Math.random()*char.length);
        id+=char[randomindex];
    }
    
    return id;
}

console.log(generate(10)); 

#code 28 -> count letters

// Online Javascript Editor for free
// Write, Edit and Run your Javascript code using JS Online Compiler
function countletter(str,letter)
{
    let  count=0;
    for(let char of str)
    {
        if(char==letter)
        {
            count++;
        }
    }
    
    return count;
}

console.log(countletter("ranbir","r"));


#code 29
function firstoccur(str)
{
    let countcharacter={};
    
    for(let char of str)
    {
        if(countcharacter[char])
        {
            countcharacter[char]++;
        }
        else
        {
            countcharacter[char]=1;
        }
    }
    
    for(let char of str)
    {
        if(countcharacter[char]==1)
        {
            return char;
        }
    }
    
    return null;
    
}
const result = firstoccur('abacddbec');
console.log(result);


#code 30 - bubble sort

function bubble(arr)
{
 
    for(let i=0;i<arr.length-1;i++)
    {
        for(let j=0;j<arr.length-1-i;j++)
        {
            if(arr[j]>arr[j+1])
            {
                let temp=arr[i];
                arr[i]=arr[j];
                arr[j]=temp;
            }
        }
    }
    
    return arr;
}

console.log(bubble([9,8,7,6,5]))



#code 31

function longestcountry(str)
{
    let longest="";
    
    for(let char of str)
    {
        if(char.length>longest.length)
        {
            longest=char;
        }
    }
    
    return longest;
}

console.log(longestcountry(["Australia", "Germany", "United States of America"]))



#code 32

function myFunction() {
    return "Something";
}

console.log(myFunction.name); 

#code 33


function fact(n)
{
    if(n<=1)return 1;
    
    return fact(n-1)*n;
}

const ans=fact(5);
console.log(ans);


#code 34

function getrange(x,y)
{
    let val=x;
    if(val>y)
    {
        return;
    }
    console.log(val);
    return getrange(val+1,y)
}

getrange(100,1000)


#code 35

function gcd(a, b) {
    while (b !== 0) {
        let temp = b;
        b = a % b;
        a = temp;
    }
    return a;
}

#  CODE 36
function getsum(arr,index)
{
   if(index>=arr.length)
   {
       return 0;
   }
   
   return arr[index]+getsum(arr,index+1);
}

var nrr=[1,2,3,4,5,6];
var result=getsum(nrr,0);
console.log(result);


#code 37

function fibonacci(n) {
  if (n === 0) return 0;
  if (n === 1) return 1;
  return fibonacci(n - 1) + fibonacci(n - 2);
}

function getFibonacciSeries(count) {
  const series = [];
  for (let i = 0; i < count; i++) {
    series.push(fibonacci(i));
  }
  return series;
}

// Example usage:
console.log(getFibonacciSeries(10)); 
// Output: [0, 1, 1, 2, 3, 5, 8, 13, 21, 34]

#code 38

function getexpo(base,exponent)
{
 if(exponent==0)
 {
     return 1;
 }
   return base*getexpo(base,exponent-1);
   

}
const ans=getexpo(5,5)
console.log(ans);



#code 39



function isEven(num) {
    return num % 2 === 0;
}

// Example usage:
console.log(isEven(4));  // Output: true
console.log(isEven(7));  // Output: false


#code 40

function display(a,b)
{
    if(a>b)
    {
        console.log(a);
    }
    else if(b>a)
    {
        console.log(b);
    }
    else
    {
        console.log("Both numbers are equal")
    }
}

display(5,10);


#code 41

function findsign(a,b,c)
{
    const product=a*b*c;
    if(product>0)
    {
        alert("The sign is +")
    }
    else if(product<0)
    {
        alert("The sign is -")
        
    }
    else 
    {
        alert("The value is 0");
    }
    
}

console.log(findsign(3,6,-8))


#code 42
function sortThree(a,b,c)
{
    let max,mid,min;
    
    if(a>=b && a>=c)
    {
        max=a;
        if(b>=c)
        {
            mid=b;
            min=c;
        }
        else
        {
            min=b;
            mid=c;
        }
    }
    else if(b>=a && b>=c)
    {
        max=b;
        if(a>=c)
        {
            mid=b;
            min=c;
        }
        else
        {
            min=b;
            mid=c;
        }
    }
    else
    {
        max=c;
        if(a>=b)
        {
            mid=a;
            min=b;
        }
        else
        {
            min=a;
            mid=b;
        }
    }
    
    alert(`Sorted order ${max} ${mid} ${min}`)
}

#code 43

function findLargest(a, b, c, d, e) {
    let largest;

    if (a >= b && a >= c && a >= d && a >= e) {
        largest = a;
    } else if (b >= a && b >= c && b >= d && b >= e) {
        largest = b;
    } else if (c >= a && c >= b && c >= d && c >= e) {
        largest = c;
    } else if (d >= a && d >= b && d >= c && d >= e) {
        largest = d;
    } else {
        largest = e;
    }

    alert("The largest number is: " + largest);
}

// Example usage:
findLargest(12, 45, 8, 32, 19);  // Output: alert with "The largest number is: 45"


#code 44

function display(n)
{
    for(let i=0;i<=n;i++)
    {
        if(i%2==0)
        {
            alert(`${i} is even`)
        }
        else
        {
            alert(`${i} is odd`)
        }
    }
}
display(15)

#code 45
for (let i = 0; i <= 15; i++) {
    if (i % 2 === 0) {
        console.log(i + " is even");
    } else {
        console.log(i + " is odd");
    }
}


#code 46

    const students = [
        { name: "David", marks: 80 },
        { name: "Vinoth", marks: 77 },
        { name: "Divya", marks: 88 },
        { name: "Ishitha", marks: 95 },
        { name: "Thomas", marks: 68 }
    ];

    let total = 0;

    // Compute total marks
    for (let student of students) {
        total += student.marks;
    }

    // Compute average
    const average = total / students.length;

    // Determine grade
    let grade;
    if (average < 60) {
        grade = "F";
    } else if (average < 70) {
        grade = "D";
    } else if (average < 80) {
        grade = "C";
    } else if (average < 90) {
        grade = "B";
    } else {
        grade = "A";
    }

    // Output result
    console.log("Average Marks: " + average);
    console.log("Grade: " + grade);
}

// Run the function
computeGrade();



#code 47

function iterate(n)
{
    for(let i=0;i<n;i++)
    {
        if(i%3==0)
        {
            alert("Fizz")
        }
        else if(i%5==0)
        {
            alert("Buzz");
        }
        else
        {
            alert("Fizzbuzz")
        }
    }
}

iterate(5)



#code 48


function happynumr(n)
{
    let happynumber=[];
    let current=1;
    while(happnumber.length<n)
    {
        if(isHappy(current))
        {
            happynumber.push(current);
        }
        current++;
    }
    
    return happynumber;
}


function isHappy(num)
{
    let seen =new set();
    while(num!=1 && !seen.has(num))
    {
        seen.add(num);
        num=getsumsquare(num);
        
    }
    
    return num==1;
    
}

function getsumsquare(num)
{
    let sum=0;
    while(num>0)
    {
        let digit=num%10;
        sum+=digit*digit;
        num=Math.floor(num/10);
    }
    
    return sum;
}



#code 49
 function is_array(input) {
  return Array.isArray(input);
}

// Test Data
console.log(is_array('w3resource')); // false
console.log(is_array([1, 2, 3]));    // true



#code 50

function array_Clone(arr) {
  return arr.slice(0);
}

// Test Data
console.log(array_Clone([1, 2, 4, 0]));       // [1, 2, 4, 0]
console.log(array_Clone([1, 2, [4, 0]]));     // [1, 2, [4, 0]]


#code 51

function first(arr, n) {
  if (!Array.isArray(arr) || arr.length === 0) return [];

  if (n == null) {
    return arr[0];
  }

  if (n < 0) {
    return [];
  }

  return arr.slice(0, n);
}

// Test Data
console.log(first([7, 9, 0, -2]));       // 7
console.log(first([], 3));              // []



#code 52

var mycolor=['red','blue','pink'];

console.log(mycolor.join(''))
console.log(mycolor.join(','))
console.log(mycolor.join('+'))


#code 53


function insertdashes(num)
{
    let str=num.toString();
    
    let result=[str[0]];
    
    for(let i=1;i<str.length;i++)
    {
        if(parseInt(str[i-1])%2==0 && parseInt(str[i])%2==0)
        {
            result.push('-');
        }
        result.push(str[i]);
    }
    
    return result.join('')
}

console.log(insertdashes(0245678));




#code 54

 function mostfrequnt(arr)
 {
     let frequency={};
     let maxcount=0;
     let mostfrequent;
     
     for(let i=0;i<arr.length;i++)
     {
         let item=arr[i];
         frequency[item]=(frequency[item]||0)+1;
         
         if(frequency[item]>maxcount)
         {
             maxcount=frequency[item];
             mostfrequent=item;
             
         }
     }
     console.log(`${mostfrequent} ${maxcount}`);
 }
 
 
 var arr1 = [3, 'a', 'a', 'a', 2, 3, 'a', 3, 'a', 2, 4, 9, 3];
mostfrequnt(arr1);



#code 55
function swap(str)
{
    let result="";
    
    for(let char of str)
    {
        if(char==char.toUpperCase())
        {
            result+=char.toLowerCase();
        }
        else
        {
            result+=char.toUpperCase();
        }
    }
    
    return result;
}

console.log(swap("Rihan"))


#code 56

function sumof(arr)
{
    let sum=0;
    
    for(let val of arr)
    {
        sum+=val*val;
        
    }
    return sum;
}

console.log(sumof([1,2,3,4]))



#code 57

function sumproof(arr)
{
    let sum=0;
    let product=1;
    
    for(let val of arr)
    {
        sum+=val*val;
        product*=val;
        
    }
    console.log(product);
    console.log(sum)
}
sumproof([1,2,3,4])


#code 58

let items = [];

function addItem(item) {
  items.push(item);
  console.log("Item added:", item);
  console.log("Current items in array:", items);
}

// Sample usage
addItem("Apple");
addItem("Banana");
addItem("Orange");


#code 59-pattern


function print(n)
{
    
    for(let i=0;i<n;i++)
    {
        let pattern="";
        for(let j=0;j<=i;j++)
        {
            pattern+="*";
        }
        console.log(pattern)
        
    }
}

print(5)

code 60

function print(a,b)
{
    while(b!=0)
    {
        let temp=b;
        b=a%b;
        a=temp;
    }
    
    console.log(a)
    
}

print(50,45)




#code 61

for (let i = 1; i < 1000; i++) {
    if (i % 3 === 0 || i % 5 === 0) {
        sum += i;
    }
}


#code 62

// Online Javascript Editor for free
// Write, Edit and Run your Javascript code using JS Online Compiler
function removeDuplicates(arr)
{
    let seen=new Set();
    return arr.filter(item=>{
        let lower=item.toLowerCase();
        if(seen.has(lower))
        {
            return false;
        }
        else
        {
            seen.add(lower)
            return true;
        }
    })
}

let items = ["Apple", "Banana", "apple", "Orange", "BANANA"];
let result = removeDuplicates(items);
console.log(result);





#code 63-Display colors with ordinal suffix

let color=["Blue","Yellow","red"];

function getsuffix(n)
{
    if(n==1)return "st";
    if(n==2)return "nd";
    if(n==3)return "rd";
    return "th"
    
    
}

for(let i=0;i<color.length;i++)
{
   position=i+1;
   suffix=getsuffix(position);
   console.log(`${position}${suffix} is ${color[i]}`);
   
}


#code 64 range of leap years----------------------

function getleap(start,end)
{
    let leapyear=[];
    for(let i=start;i<=end;i++)
    {
        if((i%4==0 && i%100!=0)||(i%400==0))
        {
            leapyear.push(i);
        }
    }
    
    console.log(leapyear)
}

getleap(2000,2025)


#code 65 -shuffle array---------------------------
function shuffleArray(arr)
{
    for(let i=arr.length-1;i>0;i--)
    {
        let j=Math.floor(Math.random()*(i+1));
        [arr[i],arr[j]]=[arr[j],arr[i]]
    }
    
    return arr;
}

let nums = [1, 2, 3, 4, 5];
console.log(shuffleArray(nums));

£code-66-------------------------------------------



function sumOfIndexValues(array1, array2) {
  let maxLength = Math.max(array1.length, array2.length);
  let result = [];

  for (let i = 0; i < maxLength; i++) {
    let val1 = array1[i] || 0;  
    let val2 = array2[i] || 0;  
    result.push(val1 + val2);
  }

  return result;
}

// Sample input
let array1 = [1, 0, 2, 3, 4];
let array2 = [3, 5, 6, 7, 8, 13];



code 67

function findDuplicates(arr) {
    let seen = new Set();
    let duplicates = new Set();

    for (let item of arr) {
        if (seen.has(item)) {
            duplicates.add(item);
        } else {
            seen.add(item);
        }
    }

    return Array.from(duplicates);
}


let numbers = [1, 2, 3, 4, 5, 2, 4, 6, 1];
let result = findDuplicates(numbers);
console.log("Duplicate values:", result);


code 68--------------------------------

function flatten(arr, shallow = false) {
  if (shallow) {
    return arr.flat(); 
  } else {
    return arr.flat(Infinity); 
  }
}


console.log(flatten([1, [2], [3, [[4]]], [5, 6]]));        // [1, 2, 3, 4, 5, 6]
console.log(flatten([1, [2], [3, [[4]]], [5, 6]], true));  // [1, 2, 3, [[4]], 5, 6]


code 69
function union(arr1,arr2)
{
    let result=[];
    for(let i=0;i<arr1.length;i++)
    {
        if(!result.includes(arr1[i]))
        {
            result.push(arr1[i]);
        }
    }
    
    for(let j=0;j<arr2,length;j++)
    {
        if(!result.includes(arr2[j]))
        {
            result.push(arr2[i]);
        }
    }
    
    return result;
}

console.log([1,2,3,4,5],[3,4,5,6])


code 70----------------------------------------

function difference(arr1, arr2) {
  let result = [];

  for (let i = 0; i < arr1.length; i++) {
    if (!arr2.includes(arr1[i])) {
      result.push(arr1[i]);
    }
  }

  for (let j = 0; j < arr2.length; j++) {
    if (!arr1.includes(arr2[j]) && !result.includes(arr2[j])) {
      result.push(arr2[j]);
    }
  }

  return result.map(String); 
}


console.log(difference([1, 2, 3], [100, 2, 1, 10])); 


#code 71-----------------------------------------

function removeFalsyValues(arr) {
  return arr.filter(function(value) {
    return value; 
  });
}


const sampleArray = [NaN, 0, 15, false, -22, '', undefined, 47, null];


console.log(removeFalsyValues(sampleArray));


#code 72-------------------------------------------

function sortByTitle(library) {
  return library.sort(function(a, b) {
    return a.title.localeCompare(b.title);
  });
}

var library = [
  { author: 'Bill Gates', title: 'The Road Ahead', libraryID: 1254 },
  { author: 'Steve Jobs', title: 'Walter Isaacson', libraryID: 4264 },
  { author: 'Suzanne Collins', title: 'Mockingjay: The Final Book of The Hunger Games', libraryID: 3245 }
];

console.log(sortByTitle(library));


#code 73------------------------------------pair sum


function pairsum(arr,target)
{
    const seen={};
    
    for(let i=0;i<arr.length;i++)
    {
        const complement=target-arr[i];
        
        if(seen.hasOwnProperty(complement))
        {
            return [seen[complement],i];
        }
        
        seen[arr[i]]=i;
    }
    return null;
}


#code 74

const users = [
  { name: "Alice", age: 25 },
  { name: "Bob", age: 30 },
  { name: "Charlie", age: 35 }
];

function getans(arr,index)
{
    return arr.map(item=>item[index]);
}

console.log(getans(users,'age'))



#code 75

function lonegest(str)
{
    if(str.length==0)return '';
    
    let prefix=str[0];
    
    for(let i=1;i<str.length;i++)
    {
        while(str[i].indexOf(prefix)!==0)
        {
            prefix=prefix.slice(0,-1);
            if(prefix==='')return '';
        }
    }
    
    return prefix;
}


#code 76------------------------------------------

function merge_array(arr1, arr2) {
  return Array.from(new Set([...arr1, ...arr2]));
}


var array1 = [1, 2, 3];
var array2 = [2, 30, 1];
console.log(merge_array(array1, array2));


#code 77--------------------------------------

// Online Javascript Editor for free
// Write, Edit and Run your Javascript code using JS Online Compiler

function remove(arr,target)
{
    let result=[];
    for(let i=0;i<arr.length;i++)
    {
        if(arr[i]==target)
        {
            continue;
        }
        result.push(arr[i]);
    }
    return result;
}

console.log(remove([13,3,4],3))


code 78-----------------------------------------


function emptyArray(arr) {
  arr.length = 0;
}

// Test
let testArray = [1, 2, 3, 4];
emptyArray(testArray);
console.log(testArray); // []


code 79---------------------------------------

function nthlargest(arr, n) {
  let sorted = [...arr].sort((a, b) => b - a);
  return sorted[n - 1];
}

console.log(nthlargest([43, 56, 23, 89, 88, 90, 99, 652], 4)); // 89



code 80------------------------Create Numeric Value Arra

function array_filled(length, value) {
  return Array(length).fill(value);
}

console.log(array_filled(6, 0));   // [0, 0, 0, 0, 0, 0]
console.log(array_filled(4, 11));  // [11, 11, 11, 11]


code 81----------------------  Array filled value


function array_filled(length, value) {
  return Array(length).fill(value);
}


console.log(array_filled(3, 'default value')); 
// ["default value", "default value", "default value"]


code 82-----------------------  

function moveElement(arr, fromIndex, toIndex) {
  // Check bounds
  if (fromIndex < 0 || fromIndex >= arr.length || toIndex < 0 || toIndex >= arr.length) {
    console.error("Invalid index");
    return arr;
  }

  const element = arr.splice(fromIndex, 1)[0];
  arr.splice(toIndex, 0, element);             
  return arr;
}


code 83--------------------------------

  function filter_array_values(arr) {
  return arr.filter(Boolean); 
}


console.log(filter_array_values([58, '', 'abcd', true, null, false, 0]));



code 84---------------------------------


function array_range(start, count) {
  return Array.from({ length: count }, (_, i) => start + i);
}


console.log(array_range(1, 4));   
console.log(array_range(-6, 4));    



code 85------------------------------


function rangeBetwee(start, end) {
  let result = [];
  for (let i = start; i <= end; i++) {
    result.push(i);
  }
  return result;
}

// Test
console.log(rangeBetwee(4, 7));     // [4, 5, 6, 7]
console.log(rangeBetwee(-4, 7));    // [-4, -3, ..., 7]

code 86------------------------

function difference(arr1, arr2) {
  // Flatten deeply nested arrays
  function flattenDeep(arr) {
    return arr.reduce((acc, val) =>
      Array.isArray(val) ? acc.concat(flattenDeep(val)) : acc.concat(val), []);
  }

  const flatArr1 = flattenDeep(arr1).map(String);
  const flatArr2 = flattenDeep(arr2).map(String);

  const combined = [...flatArr1, ...flatArr2];
  const unique = Array.from(new Set(combined));

  return unique;
}

console.log(difference([1, 2, 3], [100, 2, 1, 10]));
console.log(difference([1, 2, 3, 4, 5], [1, [2], [3, [[4]]],[5,6]]));


code 87-----------------------------


JAVASCRIPT DATE



function is_date(input) {
  return Object.prototype.toString.call(input) === "[object Date]";
}

console.log(is_date([1, 2, 4, 0]));                 // false

code 88---------------------------

function curday(separator = '/') {
  const now = new Date();
  const mm = String(now.getMonth() + 1).padStart(2, '0'); // Months are 0-based
  const dd = String(now.getDate()).padStart(2, '0');
  const yyyy = now.getFullYear();

  return mm + separator + dd + separator + yyyy;
}


console.log(curday('/')); // e.g., "06/21/2025"
console.log(curday('-')); 

code 89-----------------------------

function getdays(month,year)
{
    return new Date(year,month,0).getDate();
}

console.log(getdays(1, 2012));


code 90-------------------------------

function month_name(date) {
  const monthNames = [
    "January", "February", "March", "April", "May", "June",
    "July", "August", "September", "October", "November", "December"
  ];
  return monthNames[date.getMonth()];
}



code 91----------------------------

function compare_dates(date1, date2) {
  if (date1.getTime() === date2.getTime()) return "Date1 = Date2";
  else if (date1 > date2) return "Date1 > Date2";
  else return "Date2 > Date1";
}


code 92
--------------------------------------

function add_minutes(date, minutes) {
  return new Date(date.getTime() + minutes * 60000);
}


code 93-------------------------------

function is_weekend(dateStr) {
  const date = new Date(dateStr);
  const day = date.getDay();
  return (day === 0 || day === 6) ? "weekend" : undefined;
}

// Test
console.log(is_weekend('Nov 15, 2014')); // Saturday



code 94--------------------------------

function date_diff_indays(date1, date2) {
  const dt1 = new Date(date1);
  const dt2 = new Date(date2);
  const diffTime = dt2.getTime() - dt1.getTime();
  return Math.floor(diffTime / (1000 * 60 * 60 * 24));
}

code 95----------------------------------


function lastday(year, month) {
  return new Date(year, month + 1, 0).getDate();
}



code 96-----------------------------------


function yesterday(dateStr) {
  const date = new Date(dateStr);
  date.setDate(date.getDate() - 1);
  return date;
}

// Test
console.log(yesterday('Nov 15, 2014').toString());




#code 97--------------------------------


function max_date(dates) {
  return new Date(Math.max(...dates.map(d => new Date(d)))).toISOString().slice(0, 10).replace(/-/g, '/');
}





code 98
------------------------------
function timeConvert(minutes) {
  const hours = Math.floor(minutes / 60);
  const mins = minutes % 60;
  return `${minutes} minutes = ${hours} hour(s) and ${mins} minute(s).`;
}


code 100------------------------

function days_of_a_year(year) {
  return ((year % 4 === 0 && year % 100 !== 0) || (year % 400 === 0)) ? 366 : 365;
}

code 101-----------------------

function quarter_of_the_year(date) {
  return Math.floor(date.getMonth() / 3) + 1;
}


code 102----------------------------

function days_passed(date) {
  const start = new Date(date.getFullYear(), 0, 1);
  const diff = date - start;
  return Math.floor(diff / (1000 * 60 * 60 * 24)) + 1;
}


code 103--------------------------------

function unix_to_time(unixTimestamp) {
  const date = new Date(unixTimestamp * 1000);
  return date.toLocaleTimeString();
}

code 104---------------------------------
function calculate_age(birthDate) {
  const today = new Date();
  let age = today.getFullYear() - birthDate.getFullYear();
  const m = today.getMonth() - birthDate.getMonth();
  if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {
    age--;
  }
  return age;
}

code 105---------------------------------

function day_of_the_month(date) {
  return String(date.getDate()).padStart(2, '0');
}


code 106
-------------------------------------------
function short_Days(date) {
  return date.toLocaleString('en-us', { weekday: 'short' });
}

code 107----------------------------------

function long_Days(date) {
  return date.toLocaleString('en-us', { weekday: 'long' });
}

code 108------------------------------------

function ISO_numeric_date(date) {
  const day = date.getDay();
  return day === 0 ? 7 : day;
}




#code 109

--------------------------------

function english_ordinal_suffix(date) {
  const day = date.getDate();
  if (day > 3 && day < 21) return day + 'th';
  switch (day % 10) {
    case 1: return day + 'st';
    case 2: return day + 'nd';
    case 3: return day + 'rd';
    default: return day + 'th';
  }
}


#code 110
-----------------------

function full_month(dt) {
  return dt.toLocaleString('en-us', { month: 'long' });
}

console.log(full_month(new Date(2015, 10, 1))); // "November"


code 111
---------------------

function short_months(dt) {
  return dt.toLocaleString('en-us', { month: 'short' });
}

console.log(short_months(new Date(2015, 10, 1))); // "Nov"



code 112
-------------------------

function full_year(dt) {
  return dt.getFullYear();
}

console.log(full_year(new Date(2015, 10, 1))); // 2015


code 113---------------------

function sort_year(dt) {
  return String(dt.getFullYear()).slice(-2);
}


code 114-------------------

function am_pm_lowercase(dt) {
  return dt.getHours() >= 12 ? 'pm' : 'am';
}

function am_pm_uppercase(dt) {
  return dt.getHours() >= 12 ? 'PM' : 'AM';
}

let dt = new Date(1989, 10, 1, 13);


code 115---------------------

function diff_hours(dt1, dt2) {
  return Math.floor((dt2 - dt1) / (1000 * 60 * 60));
}

let d1 = new Date("October 13, 2014 08:11:00");

code 116
------------------------

function diff_minutes(dt1, dt2) {
  return Math.floor((dt2 - dt1) / (1000 * 60));
}

code 117-------------

function add_months(date, months) {
  const newDate = new Date(date);
  newDate.setMonth(date.getMonth() + months);
  return newDate;
}

console.log(add_months(new Date(2014, 10, 2), 10).toString());
code 1128---------------------------

function add_weeks(date, weeks) {
  const newDate = new Date(date);
  newDate.setDate(date.getDate() + weeks * 7);
  return newDate;
}

console.log(add_weeks(new Date(2014, 10, 2), 10).toString());

code 119-----------------------------
function add_years(date, years) {
  const newDate = new Date(date);
  newDate.setFullYear(date.getFullYear() + years);
  return newDate;
}



code 120
-------------------------------------

function timezone_offset_in_seconds(dt) {
  return -dt.getTimezoneOffset() * 60;
}

console.log(timezone_offset_in_seconds(new Date())); // 19800 for IST


code 122
--------------------------------------
function diff_to_GMT(dt) {
  const offset = -dt.getTimezoneOffset() / 60;
  return offset >= 0 ? `+${offset.toFixed(3)}` : offset.toFixed(3);
}

console.log(diff_to_GMT(new Date())); // "+5.500"


code 124
------------------------------
function daylights_savings(dt) {
  const jan = new Date(dt.getFullYear(), 0, 1).getTimezoneOffset();
  const jul = new Date(dt.getFullYear(), 6, 1).getTimezoneOffset();
  return dt.getTimezoneOffset() < Math.max(jan, jul) ? 1 : 0;
}

console.log(daylights_savings(new Date())); // 0 or 1

code 125
----------------------------------------

function timezone_name(dt) {
  return dt.toLocaleTimeString('en-us', { timeZoneName: 'long' }).split(' ').slice(2).join(' ');
}

code 126
----------------------------
function seconds_with_leading_zeros(dt) {
  return String(dt.getSeconds()).padStart(2, '0');
}

code 127
-------------------------------------

function minutes_with_leading_zeros(dt) {
  return String(dt.getMinutes()).padStart(2, '0');
}

console.log(minutes_with_leading_zeros(new Date(1989, 10, 1))); // "00"

code 128
--------------------------
function hours_without_zeroes(dt) {
  return dt.getHours();
}

console.log(hours_without_zeroes(new Date(1989, 10, 1)));


code 129
--------------------------
function internet_time(dt) {
  const UTC = dt.getUTCHours() * 3600 + dt.getUTCMinutes() * 60 + dt.getUTCSeconds();
  return Math.floor(((UTC + 3600) % 86400) / 86.4); // UTC+1 and 1 beat = 86.4 seconds
}

console.log(internet_time(new Date(1989, 10, 1)));


code 130
--------------------------------
function diff_weeks(dt1, dt2) {
  const oneWeek = 1000 * 60 * 60 * 24 * 7;
  const diff = Math.abs(dt2 - dt1);
  return Math.floor(diff / oneWeek);
}

let dt1 = new Date("June 13, 2014 08:11:00");
let dt2 = new Date("October 19, 2014 11:13:00");
console.log(diff_weeks(dt1, dt2)); // 18



#code 131

--------------------------------


function diff_months(dt1, dt2) {
  let years = dt2.getFullYear() - dt1.getFullYear();
  let months = dt2.getMonth() - dt1.getMonth();
  return years * 12 + months;
}

console.log(diff_months(dt1, dt2)); // 5


code 132-------------------------

function diff_years(dt1, dt2) {
  return dt2.getFullYear() - dt1.getFullYear();
}

let dt3 = new Date("October 19, 2017 11:13:00");
console.log(diff_years(dt1, dt3)); // 3

code 133
----------------------------
function week_start_date(date) {
  const day = date.getDay(); // Sunday = 0
  const diff = date.getDate() - day;
  return new Date(date.setDate(diff));
}

code 134
-------------------------
function week_end_date(date) {
  const day = date.getDay();
  const diff = date.getDate() + (6 - day);
  return new Date(date.setDate(diff));
}

console.log(week_end_date(new Date("June 19, 2025"))); // End of week (Saturday)



code 135
----------------------------
function month_end_date(date) {
  return new Date(date.getFullYear(), date.getMonth() + 1, 0);
}

console.log(month_end_date(new Date("June 19, 2025"))); // June 30, 2025


code 136
----------------------------
function month_start_date(date) {
  return new Date(date.getFullYear(), date.getMonth(), 1);
}

console.log(month_start_date(new Date("June 19, 2025"))); // June 1, 2025


code 137
-------------------------------
function is_string(input) {
  return typeof input === 'string';
}

console.log(is_string('w3resource')); // true  
console.log(is_string([1, 2, 4, 0]));  // false



code 138
-------------------------------

function is_Blank(input) {
  return input === '';
}

console.log(is_Blank(''));     // true  
console.log(is_Blank('abc'));  // false


code 139
----------------------------------

function string_to_array(str) {
  return str.trim().split(" ");
}

console.log(string_to_array("Robin Singh")); // ["Robin", "Singh"]


code 140
--------------------
function truncate_string(str, num) {
  return str.slice(0, num);
}

console.log(truncate_string("Robin Singh", 4)); // "Robi"

code 141
----------------------------

function abbrev_name(name) {
  const [first, last] = name.split(" ");
  return `${first} ${last.charAt(0)}.`;
}

console.log(abbrev_name("Robin Singh")); // "Robin S."


code 142----------------------

function protect_email(email) {
  let [user, domain] = email.split("@");
  let hidden = user.slice(0, user.indexOf("_")) || user.slice(0, 4);
  return `${hidden}...@${domain}`;
}

code 143-----------------------------

function string_parameterize(str) {
  return str.toLowerCase().replace(/[^a-z0-9]+/g, '-').replace(/^-|-$/g, '');
}

code 144-----------------------------

function capital(str)
{
    return str.charAt(0).toUpperCase()+str.slice(1,str.length);
}

console.log(capital("rihan"))

code 145----------------------------

function swapcase(str) {
  return str.split('').map(char =>
    char === char.toUpperCase()
      ? char.toLowerCase()
      : char.toUpperCase()
  ).join('');
}

console.log(swapcase('AaBbc')); // "aAbBC"





code 148
----------------------------------

function insert(original, insertText = '', position = 0) {
  return original.slice(0, position) + insertText + original.slice(position);
}

console.log(insert('We are doing some exercises.'));                         // "We are doing some exercises."


code 149
--------------------------------
function repeat(str, n = 1) {
  return str.repeat(n);
}

console.log(repeat('Ha!'));      // "Ha!"






CODE 150----------------------------


function text_truncate(str, length, ending = "...") {

  return str.length > length ? str.slice(0, length - ending.length) + ending : str;
}

console.log(text_truncate('We are doing JS string exercises.'));         // "We are doing JS string exercises."
co

code 151
----------------------------------------------------------------

function string_chunks(str,size)
{
    let result=[];
    for(let i=0;i<str.length;i+=size)
    {
        result.push(str.slice(i,i+size));
    }
    
    return result;
}




code 152
----------------------------------------------------

function string_chunks(str,size)
{
    let result=[];
    for(let i=0;i<str.length;i+=size)
    {
        result.push(str.slice(i,i+size));
    }
    
    return result;
}

console.log(string_chunks("rihanna",2))

code 153
--------------------------------------

function repeat_string(str, count = 1) {
  if (typeof str !== "string" || typeof count !== "number" || count < 1) {
    return "Error in string or count.";
  }
  return str.repeat(count);
}

console.log(repeat_string('a', 4)); // "aaaa"
console.log(repeat_string('a'));    // "a"


coed 154
----------------------------------


function subStrAfterChars(str, char, pos) {
  let index = str.indexOf(char);
  if (index === -1) return str;
  return pos === 'b' ? str.slice(index + 1) : str.slice(0, index);
}

console.log(subStrAfterChars('w3resource: JavaScript Exercises', ':','a')); // "w3resource"
console.log(subStrAfterChars('w3resource: JavaScript Exercises', 'E','b')); // "xercises"


code 155
-----------------------------

function strip(str) {
  return str.trim();
}

console.log(strip('w3resource '));   // "w3resource"
console.log(strip(' w3resource'));   // "w3resource"
console.log(strip(' w3resource '));  // "w3resource"

code 156
-------------------------

function truncate(str, numWords) {
  return str.split(" ").slice(0, numWords).join(" ");
}

console.log(truncate('The quick brown fox jumps over the lazy dog', 4)); 
// "The quick brown fox"


code 157
---------------------------
function alphabetize_string(str) {
  return str.replace(/\s+/g, '').split('').sort().join('');
}

console.log(alphabetize_string('United States')); // "Sadeeinsttttu"

code 158
----------------------------
function remove_first_occurrence(str, searchStr) {
  return str.replace(searchStr, '');
}

// Test
console.log(remove_first_occurrence("The quick brown fox jumps over the lazy dog", 'the'));
// Output: "The quick brown fox jumps over  lazy dog"


code 159
--------------------------
function ascii_to_hexa(str) {
  return str.split('').map(char => char.charCodeAt(0).toString(16)).join('');
}

// Test
console.log(ascii_to_hexa('12'));   // "3132"
console.log(ascii_to_hexa('100'));  // "313030"


code 160
--------------------------
function hex_to_ascii(hex) {
  let str = '';
  for (let i = 0; i < hex.length; i += 2) {
    str += String.fromCharCode(parseInt(hex.substr(i, 2), 16));
  }
  return str;
}


code 161
----------------------------------
function search_word(text, word) {
  let pattern = new RegExp(`\\b${word}\\b`, 'gi');
  let matches = text.match(pattern);
  let count = matches ? matches.length : 0;
  return `'${word}' was found ${count} times.`;
}


code162
-------------------------------------

function string_endsWith(str, suffix) {
  if (suffix === '') return false;
  return str.endsWith(suffix);
}

// Test
console.log(string_endsWith('JS PHP PYTHON', 'PYTHON')); // true
console.log(string_endsWith('JS PHP PYTHON', ''));       // false


code 163
---------------------------------
function escape_html(str) {
  return str.replace(/&/g, "&amp;")
            .replace(/</g, "&lt;")
            .replace(/>/g, "&gt;")
            .replace(/'/g, "&#39;")
            .replace(/"/g, "&quot;");
}

// Test
console.log(escape_html('PHP & MySQL'));   // "PHP &amp; MySQL"
console.log(escape_html('3 > 2'));         // "3 &gt; 2"


code 164-----------------------


function remove_non_ascii(str) {
  return str.replace(/[^\x20-\x7E]/g, '');
}

// Test
console.log(remove_non_ascii('äÄçÇéÉêPHP-MySQLöÖÐþúÚ'));  // "PHP-MySQL"


code 165
-----------------------------
function remove_non_word(str) {
  return str.replace(/[^\w\s-]/g, '');
}

// Test
console.log(remove_non_word('PHP ~!@#$%^&*()+`-={}[]|\\:";\'/?><., MySQL'));
// "PHP - MySQL"



code 166
---------------------------------
function sentenceCase(str) {
  return str.toLowerCase().replace(/(^\w|\.\s*\w)/g, s => s.toUpperCase());
}

// Test
console.log(sentenceCase('PHP exercises. python exercises.'));
// "Php Exercises. Python Exercises."



code 167
-----------------------------------
function strip_html_tags(str) {
  return str.replace(/<[^>]*>/g, '');
}

// Test
console.log(strip_html_tags('<p><strong><em>PHP Exercises</em></strong></p>'));
// "PHP Exercises"


code 169
-----------------------------


function zeroFill(number, width, sign) {
  let numStr = Math.abs(number).toString().padStart(width, '0');
  if (sign === '-') {
    return '+' + numStr;
  }
  return numStr;
}

// Test
console.log(zeroFill(120, 5, '-'));  // "+00120"
console.log(zeroFill(29, 4));        // "0029"


code 170
-------------------------


function compare_strings(str1, str2) {
  return str1.toLowerCase() === str2.toLowerCase();
}


code 171
-----------------------------

function case_insensitive_search(str, search) {
  return str.toLowerCase().includes(search.toLowerCase()) ? "Matched" : "Not Matched";
}



code 172
-------------------------
function isFirstCharUpper(str) {
  return /^[A-Z]/.test(str);
}


code 173----------------------


function isValidCreditCard(cardNumber) {
  return /^(?:\d{4}[- ]?){3}\d{4}$/.test(cardNumber);
}


code 174
-------------------------
const emailPattern = /^[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-zA-Z0-9-]+\.)+[a-zA-Z]{2,}$/;

// Test
console.log(emailPattern.test("example.email+1@gmail.com")); // true

code 175----------------------

function findDate(str) {
  return str.match(/\b\d{1,2}[\/-]\d{1,2}[\/-]\d{4}\b/);
}

// Test
console.log(findDate("Today's date is 22-06-2025")); // ['22-06-2025']


code 176
-------------------------------
function customTrim(str) {
  return str.replace(/^\s+|\s+$/g, '');
}


code 177
-------------------------
function wordCount(str) {
  return str.trim().replace(/\s+/g, ' ').split(' ').length;
}

code 178
-----------------------
function isValidIP(ip) {
  return /^(25[0-5]|2[0-4]\d|1\d{2}|[1-9]?\d)(\.(?!$)){3}(25[0-5]|2[0-4]\d|1\d{2}|[1-9]?\d)$/.test(ip);
}


code 179
----------------------
function countVowels(str) {
  return str.match(/[aeiou]/gi)?.length || 0;
}

code 180
-------------------------------
function isValidURL(url) {
  return /^(https?:\/\/)?([\w.-]+)\.([a-z]{2,6})(\/\S*)?$/i.test(url);
}


code 181
---------------------------
function isAlphanumeric(str) {
  return /^[a-z0-9]+$/i.test(str);
}


code 182--------------------
function isValidTime(time) {
  return /^([01]\d|2[0-3]):([0-5]\d)$/.test(time);
}


code 183
------------------------------
function isUSZipCode(zip) {
  return /^\d{5}(-\d{4})?$/.test(zip);
}


code 184
------------------------
function isUKPostCode(code) {
  return /^[A-Z]{1,2}\d[A-Z\d]?\s*\d[A-Z]{2}$/i.test(code);
}

code 185
--------------------------
function isCanadaPostCode(code) {
  return /^[A-Z]\d[A-Z] ?\d[A-Z]\d$/i.test(code);
}


code 186
-------------------------
function isValidSSN(ssn) {
  return /^\d{3}-\d{2}-\d{4}$/.test(ssn);
}


code 187
-------------------------
function isHexValue(val) {
  return /^0[xX][0-9a-fA-F]+$/.test(val);
}
   

code 188------------------
function isDomain(val) {
  return /^[a-z0-9.-]+\.[a-z]{2,}$/i.test(val);
}


code 189
--------------------
function isHTML(val) {
  return /<\/?[a-z][\s\S]*>/i.test(val);
}


code 190----------------
function isAlphaDashUnderscore(val) {
  return /^[a-zA-Z-_]+$/.test(val);
}


code 191
----------------------
function thousands_separators(num) {
  return num.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
}

// Test
console.log(thousands_separators(1000));       // "1,000"


code 192
---------------------------------
<html>
<head>
  <meta charset="utf-8" />
  <title>JS DOM paragraph style</title>
</head>
<body>
  <p id='text'>JavaScript Exercises - w3resource</p>
  <button onclick="js_style()">Style</button>
  <script>
    function rihan__style() {
      const text = document.getElementById('text');
      text.style.fontFamily = "Arial";
      text.style.fontSize = "20px";
      text.style.color = "blue";
    }
  </script>
</body>
</html

code 193
--------------------------
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8" />
  <title>Get First and Last Name</title>
</head>
<body>
  <form id="form1" onsubmit="getFormvalue(event)">
    First name: <input type="text" name="fname" value="David"><br>
    Last name: <input type="text" name="lname" value="Beckham"><br>
    <input type="submit" value="Submit">
  </form>
  <script>
    function getFormvalue(event) {
      event.preventDefault();
      const fname = document.forms["form1"]["fname"].value;
      const lname = document.forms["form1"]["lname"].value;
      alert(fname + " " + lname);
    }
  </script>
</body>
</html>



code 194
-------------------------
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title>Change Paragraph Background</title>
</head>
<body>
  <p id="para">This is a paragraph.</p>
  <button onclick="changeBackground()">Change Background</button>
  <script>
    function changeBackground() {
      document.getElementById("para").style.backgroundColor = "yellow";
    }
  </script>
</body>
</html>


code 195
--------------------------


<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title>Get Link Attributes</title>
</head>
<body>
  <p><a id="w3r" type="text/html" hreflang="en-us" rel="nofollow" target="_self" href="http://www.w3resource.com/">w3resource</a></p>
  <button onclick="getAttributes()">Get Attributes</button>
  <script>
    function getAttributes() {
      const link = document.getElementById("w3r");
      alert(`href: ${link.href}\nhreflang: ${link.hreflang}\nrel: ${link.rel}\ntarget: ${link.target}\ntype: ${link.type}`);
    }
  </script>
</body>
</html>


code 196
---------------------------

<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8" />
  <title>Insert Row in Table</title>
</head>
<body>
  <table id="sampleTable" border="1">
    <tr><td>Row1 cell1</td><td>Row1 cell2</td></tr>
    <tr><td>Row2 cell1</td><td>Row2 cell2</td></tr>
  </table><br>
  <input type="button" onclick="insert_Row()" value="Insert row">
  <script>
    function insert_Row() {
      let table = document.getElementById('sampleTable');
      let row = table.insertRow();
      let cell1 = row.insertCell(0);
      let cell2 = row.insertCell(1);
      cell1.innerHTML = "New Cell1";
      cell2.innerHTML = "New Cell2";
    }
  </script>
</body>
</html>


code 197-------------------------

<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title>Change the content of a cell</title>
</head>
<body>
  <table id="myTable" border="1">
    <tr><td>Row1 cell1</td><td>Row1 cell2</td></tr>
    <tr><td>Row2 cell1</td><td>Row2 cell2</td></tr>
    <tr><td>Row3 cell1</td><td>Row3 cell2</td></tr>
  </table>
  <form>
    <input type="button" onclick="changeContent()" value="Change content">
  </form>

  <script>
    function changeContent() {
      const row = parseInt(prompt("Enter row index (0-based):"));
      const col = parseInt(prompt("Enter column index (0-based):"));
      const text = prompt("Enter new content:");
      const table = document.getElementById("myTable");

      if (
        row >= 0 && row < table.rows.length &&
        col >= 0 && col < table.rows[row].cells.length
      ) {
        table.rows[row].cells[col].innerHTML = text;
      } else {
        alert("Invalid row or column index.");
      }
    }
  </script>
</body>
</html>


code 198
--------------------------------

<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8" />
  <title>Create Table</title>
  <style>
    body { margin: 30px; }
  </style>
</head>
<body>
  <table id="myTable" border="1"></table>
  <form>
    <input type="button" onclick="createTable()" value="Create the table">
  </form>
  <script>
    function createTable() {
      const rows = parseInt(prompt("Enter number of rows:"));
      const cols = parseInt(prompt("Enter number of columns:"));
      const table = document.getElementById("myTable");
      table.innerHTML = "";
      for (let i = 0; i < rows; i++) {
        const row = table.insertRow();
        for (let j = 0; j < cols; j++) {
          const cell = row.insertCell();
          cell.innerHTML = `Row-${i} Column-${j}`;
        }
      }
    }
  </script>
</body>
</html>



code 199
-----------------------------------








<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title>Remove items from a dropdown list</title>
</head>
<body>
  <form>
    <select id="colorSelect">
      <option>Red</option>
      <option>Green</option>
      <option>White</option>
      <option>Black</option>
    </select>
    <input type="button" onclick="removecolor()" value="Select and Remove">
  </form>
  <script>
    function removecolor() {
      const sel = document.getElementById("colorSelect");
      sel.remove(sel.selectedIndex);
    }
  </script>
</body>
</html>

code 200
--------------------------

<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title>Count and Display Dropdown Items</title>
  <style>
    body { margin: 30px; }
  </style>
</head>
<body>
  <form>
    Select your favorite Color:
    <select id="mySelect">
      <option>Red</option>
      <option>Green</option>
      <option>Blue</option>
      <option>White</option>
    </select>
    <input type="button" onclick="getOptions()" value="Count and Output all items">
  </form>
  <script>
    function getOptions() {
      const sel = document.getElementById("mySelect");
      let message = `Total items: ${sel.length}\n`;
      for (let i = 0; i < sel.length; i++) {
        message += `${i + 1}. ${sel.options[i].text}\n`;
      }
      alert(message);
    }
  </script>
</body>
</html>


code 201

--------------------------
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title>Random Image Display</title>
</head>
<body>
  <button onclick="showRandomImage()">Show Random Image</button>
  <br><br>
  <img id="image" src="" alt="Random Image" width="300">
  <script>
    function showRandomImage() {
      const images = [
        { url: "http://farm4.staticflickr.com/3691/11268502654_f28f05966c_m.jpg", width: 240, height: 160 },
        { url: "http://farm1.staticflickr.com/33/45336904_1aef569b30_n.jpg", width: 320, height: 195 },
        { url: "http://farm6.staticflickr.com/5211/5384592886_80a512e2c9.jpg", width: 500, height: 343 }
      ];
      const rand = images[Math.floor(Math.random() * images.length)];
      const img = document.getElementById("image");
      img.src = rand.url;
      img.width = rand.width;
      img.height = rand.height;
    }
  </script>
</body>
</html>


code 202
----------------------------
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title>Highlight Bold Text</title>
</head>
<body>
  <a href="#" onmouseover="highlight()" onmouseout="removeHighlight()">
    Hover here to highlight bold text
  </a>
  <p>
    We have just started this section for the users (<b>beginner</b> to <b>intermediate</b>)
    who want to work with various JavaScript problems and write scripts online
    to test their <b>JavaScript</b> skill.
  </p>
  <script>
    function highlight() {
      const bolds = document.getElementsByTagName("b");
      for (let b of bolds) {
        b.style.backgroundColor = "yellow";
      }
    }
    function removeHighlight() {
      const bolds = document.getElementsByTagName("b");
      for (let b of bolds) {
        b.style.backgroundColor = "";
      }
    }
  </script>
</body>
</html>


code 203
----------------------------
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title>Window Dimensions</title>
</head>
<body>
  <p id="dimensions">Resize the window to see the changes</p>
  <script>
    function updateDimensions() {
      const width = window.innerWidth;
      const height = window.innerHeight;
      document.getElementById("dimensions").textContent = `Width: ${width}, Height: ${height}`;
    }
    window.addEventListener("resize", updateDimensions);
    window.addEventListener("load", updateDimensions);
  </script>
</body>
</html>


code 204
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title>Random Image Display</title>
</head>
<body>
  <button onclick="showRandomImage()">Show Random Image</button>
  <br><br>
  <img id="image" src="" alt="Random Image" width="300">
  <script>
    function showRandomImage() {
      const images = [
        { url: "http://farm4.staticflickr.com/3691/11268502654_f28f05966c_m.jpg", width: 240, height: 160 },
        { url: "http://farm1.staticflickr.com/33/45336904_1aef569b30_n.jpg", width: 320, height: 195 },
        { url: "http://farm6.staticflickr.com/5211/5384592886_80a512e2c9.jpg", width: 500, height: 343 }
      ];
      const rand = images[Math.floor(Math.random() * images.length)];
      const img = document.getElementById("image");
      img.src = rand.url;
      img.width = rand.width;
      img.height = rand.height;
    }
  </script>
</body>
</html>


code 205
------------------------

<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title>Draw Rectangle</title>
</head>
<body>
  <canvas id="canvas" width="300" height="150" style="border:1px solid #000"></canvas>
  <script>
    const canvas = document.getElementById("canvas");
    const ctx = canvas.getContext("2d");

    ctx.fillStyle = "blue";
    ctx.fillRect(50, 30, 200, 100);
  </script>
</body>
</html>


code 206
--------------------
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title>Draw Circle</title>
</head>
<body>
  <canvas id="canvas" width="300" height="200" style="border:1px solid #000"></canvas>
  <script>
    const canvas = document.getElementById("canvas");
    const ctx = canvas.getContext("2d");

    ctx.beginPath();
    ctx.arc(150, 100, 70, 0, 2 * Math.PI);
    ctx.fillStyle = "green";
    ctx.fill();
    ctx.stroke();
  </script>
</body>
</html>


code 207
---------------------------------
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title>Intersecting Rectangles</title>
</head>
<body>
  <canvas id="canvas" width="300" height="200" style="border:1px solid #000"></canvas>
  <script>
    const canvas = document.getElementById("canvas");
    const ctx = canvas.getContext("2d");

    ctx.fillStyle = "red";
    ctx.fillRect(30, 30, 100, 100);

    ctx.fillStyle = "rgba(0, 0, 255, 0.5)";
    ctx.fillRect(80, 80, 100, 100);
  </script>
</body>
</html>







code 211
---------------------------
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title>List Object Properties</title>
</head>
<body>
  <script>
    const student = {
      name: "David Rayy",
      sclass: "VI",
      rollno: 12
    };

    const properties = Object.keys(student);
    document.write("Properties: " + properties.join(", "));
  </script>
</body>
</html>


code 212
-----------------------------
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title>Delete Property</title>
</head>
<body>
  <script>
    const student = {
      name: "David Rayy",
      sclass: "VI",
      rollno: 12
    };

    document.write("Before deletion: " + JSON.stringify(student) + "<br>");
    delete student.rollno;
    document.write("After deletion: " + JSON.stringify(student));
  </script>
</body>
</html>


code 213
---------------------------

<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title>Object Length</title>
</head>
<body>
  <script>
    const student = {
      name: "David Rayy",
      sclass: "VI",
      rollno: 12
    };

    const length = Object.keys(student).length;
    document.write("Object length: " + length);
  </script>
</body>
</html>


code 214
--------------------------
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title>Book Reading Status</title>
</head>
<body>
  <script>
    const library = [
      {
        author: 'Bill Gates',
        title: 'The Road Ahead',
        readingStatus: true
      },
      {
        author: 'Steve Jobs',
        title: 'Walter Isaacson',
        readingStatus: true
      },
      {
        author: 'Suzanne Collins',
        title: 'Mockingjay: The Final Book of The Hunger Games',
        readingStatus: false
      }
    ];

    library.forEach(book => {
      document.write(`<p>${book.title} by ${book.author} - Reading Status: ${book.readingStatus}</p>`);
    });
  </script>
</body>
</html>

code 215
---------------------------
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title>Cylinder Volume</title>
</head>
<body>
  <script>
    class Cylinder {
      constructor(radius, height) {
        this.radius = radius;
        this.height = height;
      }

      getVolume() {
        return (Math.PI * Math.pow(this.radius, 2) * this.height).toFixed(4);
      }
    }

    const cyl = new Cylinder(3, 7);
    document.write("Volume of Cylinder: " + cyl.getVolume());
  </script>
</body>
</html>


code 216
-----------------------------
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title>Bubble Sort</title>
</head>
<body>
  <script>
    function bubbleSort(arr) {
      let n = arr.length;
      for (let i = 0; i < n - 1; i++) {
        for (let j = 0; j < n - i - 1; j++) {
          if (arr[j] > arr[j + 1]) {
            [arr[j], arr[j + 1]] = [arr[j + 1], arr[j]];
          }
        }
      }
      return arr;
    }

    const data = [6, 4, 0, 3, -2, 1];
    const sorted = bubbleSort(data);
    document.write("Sorted Array: " + sorted);
  </script>
</body>
</html>


code 217
--------------------------
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title>String Subsets</title>
</head>
<body>
  <script>
    function getSubsets(str) {
      let result = [];
      for (let i = 0; i < str.length; i++) {
        for (let j = i + 1; j <= str.length; j++) {
          result.push(str.slice(i, j));
        }
      }
      return result;
    }

    const input = "dog";
    const subsets = getSubsets(input);
    document.write("Subsets: " + JSON.stringify(subsets));
  </script>
</body>
</html>



code 218
--------------------------

<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title>Clock</title>
</head>
<body>
  <script>
    function updateClock() {
      const now = new Date();
      const time = now.toLocaleTimeString('en-GB');
      console.log(time);
    }
    setInterval(updateClock, 1000);
  </script>
</body>
</html>


code 219
---------------------------
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title>Circle Area and Perimeter</title>
</head>
<body>
  <script>
    class Circle {
      constructor(radius) {
        this.radius = radius;
      }

      getArea() {
        return (Math.PI * this.radius * this.radius).toFixed(2);
      }

      getPerimeter() {
        return (2 * Math.PI * this.radius).toFixed(2);
      }
    }

    const r = 5;
    const c = new Circle(r);
    document.write(`Radius: ${r}<br>Area: ${c.getArea()}<br>Perimeter: ${c.getPerimeter()}`);
  </script>
</body>
</html>

-------------------------------------------------
code 220

<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title>Sort Object Array</title>
</head>
<body>
  <script>
    const library = [
      { title: 'The Road Ahead', author: 'Bill Gates', libraryID: 1254 },
      { title: 'Walter Isaacson', author: 'Steve Jobs', libraryID: 4264 },
      { title: 'Mockingjay', author: 'Suzanne Collins', libraryID: 3245 }
    ];

    library.sort((a, b) => b.libraryID - a.libraryID);

    document.write(JSON.stringify(library, null, 2));
  </script>
</body>
</html>


code 221
---------------------------------------
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title>Clock</title>
</head>
<body>
  <script>
    function updateClock() {
      const now = new Date();
      const time = now.toLocaleTimeString('en-GB');
      console.log(time);
    }
    setInterval(updateClock, 1000);
  </script>
</body>
</html>

code 222-----------------------------


<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title>Sort Library Objects</title>
</head>
<body>
  <script>
    const library = [
      {
        title: 'The Road Ahead',
        author: 'Bill Gates',
        libraryID: 1254
      },
      {
        title: 'Walter Isaacson',
        author: 'Steve Jobs',
        libraryID: 4264
      },
      {
        title: 'Mockingjay: The Final Book of The Hunger Games',
        author: 'Suzanne Collins',
        libraryID: 3245
      }
    ];

    library.sort((a, b) => b.libraryID - a.libraryID);

    console.log("Sorted Library:", library);
    document.write("<pre>" + JSON.stringify(library, null, 2) + "</pre>");
  </script>
</body>
</html>



code 223------------------------------------


function isBoolean(val) {
  return typeof val === 'boolean';
}


code 224----------------------------


function isError(val) {
  return val instanceof Error;
}




code 225----------------------------

function isNaNValue(val) {
  return typeof val === 'number' && isNaN(val);
}




code 226-------------------------------


function isNull(val) {
  return val === null;
}



code 227---------------------------------


function isRegExp(val) {
  return val instanceof RegExp;
}




code 228----------------------------------




  

function isPureJSONObject(val) {
  return val && typeof val === 'object' && val.constructor === Object;
}


code 229----------------------

function isChar(val) {
  return typeof val === 'string' && val.length === 1;
}

code 230------------------

function isSameType(a, b) {
  return typeof a === typeof b;
}


code 231--------------------


const favoriteMovie = {
  title: "Puff the Magic Dragon",
  duration: 30,
  stars: ["Puff", "Jackie", "Living Sneezes"]
};


function printMovieInfo(movie) {
  console.log(`${movie.title} lasts for ${movie.duration} minutes. Stars: ${movie.stars.join(", ")}.`);
}


printMovieInfo(favoriteMovie);

code 232---------------------


const books = [
  {
    title: "The Hobbit",
    author: "J.R.R. Tolkien",
    alreadyRead: true
  },
  {
    title: "The Lord of the Rings",
    author: "J.R.R. Tolkien",
    alreadyRead: false
  },
  {
    title: "1984",
    author: "George Orwell",
    alreadyRead: true
  }
];


function logReadingList(bookList) {
  bookList.forEach(book => {
    const bookInfo = `"${book.title}" by ${book.author}`;
    if (book.alreadyRead) {
      console.log(`You already read ${bookInfo}`);
    } else {
      console.log(`You still need to read ${bookInfo}`);
    }
  });
}

logReadingList(books);






code 233------------------------


// Recipe object
const recipe = {
  title: "Mole",
  servings: 2,
  ingredients: ["cinnamon", "cumin", "cocoa"]
};


function printRecipeCard(recipe) {
  console.log(recipe.title);
  console.log(`Serves: ${recipe.servings}`);
  console.log("Ingredients:");
  recipe.ingredients.forEach(ingredient => {
    console.log(ingredient);
  });
}


printRecipeCard(recipe);


code 234------------------------------

function tellFortune(numChildren, partnerName, location, jobTitle) {
  console.log(`You will be a ${jobTitle} in ${location}, and married to ${partnerName} with ${numChildren} kids.`);
}


tellFortune(2, "Alice", "Paris", "Designer");
tellFortune(0, "Sam", "Tokyo", "Engineer");
tellFortune(3, "Rina", "New York", "Chef");


code 235----------------------------

function calculateAge(birthYear, currentYear = new Date().getFullYear()) {
  const age1 = currentYear - birthYear;
  const age2 = age1 - 1;
  console.log(`You are either ${age2} or ${age1}`);
}

// Call 3 times
calculateAge(2000, 2025);
calculateAge(1990);
calculateAge(1985);




code 236----------------------------

function calculateSupply(age, amountPerDay) {
  const maxAge = 90;
  const totalNeeded = Math.round((maxAge - age) * 365 * amountPerDay);
  console.log(`You will need ${totalNeeded} to last you until the ripe old age of ${maxAge}`);
}

// Call 3 times
calculateSupply(25, 2.5);
calculateSupply(40, 3);
calculateSupply(18, 1.7);


code 237--------------------------

function calcCircumference(radius) {
  const circumference = 2 * Math.PI * radius;
  console.log(`The circumference is ${circumference.toFixed(2)}`);
}

function calcArea(radius) {
  const area = Math.PI * Math.pow(radius, 2);
  console.log(`The area is ${area.toFixed(2)}`);
}

// Example usage
calcCircumference(5);
calcArea(5);



code 238----------------------------


function celsiusToFahrenheit(celsius) {
  const fahrenheit = (celsius * 9/5) + 32;
  console.log(`${celsius}°C is ${fahrenheit.toFixed(2)}°F`);
}

// Example usage
celsiusToFahrenheit(30);

code 240---------------------------

function fahrenheitToCelsius(fahrenheit) {
  const celsius = (fahrenheit - 32) * 5/9;
  console.log(`${fahrenheit}°F is ${celsius.toFixed(2)}°C`);
}

// Example usage
fahrenheitToCelsius(86);  // 86°F is 30.00°C


code 241------------------------

function alphabetize(str) {
  return str.split('').sort().join('');
}

// Example
console.log(alphabetize("javascript"));  

code 242-------------------------
function uniqueChars(str) {
  return [...new Set(str)].join('');
}

// Example
console.log(uniqueChars("thequickbrownfoxjumpsoverthelazydog"));



code 243-------------------------

<!DOCTYPE html>
<html>
<head>
  <title>Time Converter</title>
  <script>
    function convertToUTC() {
      const now = new Date();
      alert("UTC Time: " + now.toUTCString());
    }

    function startTimer() {
      setTimeout(() => {
        const now = new Date();
        document.getElementById("timerResult").textContent = now.toLocaleString();
      }, 3000); // 3 seconds delay
    }
  </script>
</head>
<body>
  <button onclick="convertToUTC()">Convert to UTC</button>
  <br><br>
  <button onclick="startTimer()">Show Time After Delay</button>
  <p id="timerResult"></p>
</body>
</html>




code 237------------------------------


<!DOCTYPE html>
<html>
<head>
  <title>Image Click</title>
  <script>
    function changeImage() {
      document.getElementById("myImg").src = "https://via.placeholder.com/200x100/ff7f7f";
    }
  </script>
</head>
<body>
  <img id="myImg" src="https://via.placeholder.com/200x100/87ceeb" onclick="changeImage()" alt="Click Me" />
</body>
</html>


code 238---------------------------


<!DOCTYPE html>
<html>
<head>
  <title>Insert Paragraph and Style Change</title>
  <style>
    .highlight {
      color: white;
      background-color: blue;
      font-weight: bold;
      padding: 10px;
    }
  </style>
</head>
<body>

<p id="para1">This is the first paragraph.</p>
<p id="para2">This is the second paragraph.</p>

<script>
  // Create and insert new paragraph
  const newPara = document.createElement("p");
  newPara.textContent = "This is the inserted paragraph.";
  newPara.id = "newPara";
  document.body.insertBefore(newPara, document.getElementById("para2"));

  // Event listeners to toggle style
  newPara.addEventListener("mouseover", () => {
    newPara.className = "highlight";
  });

  newPara.addEventListener("mouseout", () => {
    newPara.className = "";
  });
</script>

</body>
</html>


